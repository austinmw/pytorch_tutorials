import matplotlib.pyplot as plt
import numpy as np
from copy import deepcopy # best_model_wts = copy.deepcopy(model.state_dict())
from skimage import io, transform
import pandas as pd

# basic ops and data
import torch
import torchvision
import torchvision.transforms as transforms

# define a network
import torch.nn as nn
import torch.nn.functional as F

# define loss function and optimizer
import torch.optim as optim
torch.optim.lr_scheduler

# helpful
torchvision.datasets.
torchvision.transforms.
torchvision.models.
torch.utils.data. # Dataset, DataLoader
torchvision.utils.make_grid()
torch.device()


# Ignore warnings
import warnings
warnings.filterwarnings("ignore")

plt.ion()   # interactive mode

%matplotlib notebook